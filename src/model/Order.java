package model;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;

public class Order implements Serializable{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1;
	private String code; // Autogenerated
	private State state; // Probably an enum
	private ArrayList<Product> products;
	// La cantidad por cada uno ????
	private Client client;
	private Employee employee;
	private LocalDate date;
	private LocalTime time;
	//private Date hour; // Separated?
	private String observations;
	
	private User createdBy;
	private User lastModifiedBy;
	
	public Order(String code, State state, ArrayList<Product> products, Client client, Employee employee, LocalDate date, LocalTime time, String observations, User createdBy) { //
		this.code = code;
		this.state = state;
		this.products = products;
		this.client = client;
		this.employee = employee;
		this.date = date;
		this.setTime(time);
		this.observations = observations;
		this.createdBy = createdBy;
		lastModifiedBy = createdBy;
	} 
	
	/**
	 * @return the code
	 */
	public String getCode() {
		return code;
	}
	
	/**
	 * @param code the code to set
	 */
	public void setCode(String code) {
		this.code = code;
	}
	
	/**
	 * @return the state
	 */
	public State getState() {
		return state;
	}
	
	/**
	 * @param state the state to set
	 */
	public boolean setState(State changeState) {
		boolean changed = false;
		if (changeState == State.INPROCESS && (state != State.SENT && state != State.DELIVERED)) {
			changed = true;
		} else if (changeState == State.SENT && state != State.DELIVERED) {
			changed = true;
		} else if (changeState == State.DELIVERED) {
			changed = true;
		}
		if (changed) {
			state = changeState;
		}
		
		return changed;
 	}
	
	/**
	 * @return the products
	 */
	public ArrayList<Product> getProducts() {
		return products;
	}
	
	/**
	 * @param products the products to set
	 */
	public void setProducts(ArrayList<Product> products) {
		this.products = products;
	}
	
	/**
	 * @return the client
	 */
	public Client getClient() {
		return client;
	}
	
	/**
	 * @param client the client to set
	 */
	public void setClient(Client client) {
		this.client = client;
	}
	
	/**
	 * @return the employee
	 */
	public Employee getEmployee() {
		return employee;
	}
	
	/**
	 * @param employee the employee to set
	 */
	public void setEmployee(Employee employee) {
		this.employee = employee;
	}
	
	/**
	 * @return the date
	 */
	public LocalDate getDate() {
		return date;
	}
	
	/**
	 * @param date the date to set
	 */
	public void setDate(LocalDate date) {
		this.date = date;
	}
	
	/**
	 * @return the observations
	 */
	public String getObservations() {
		return observations;
	}
	
	/**
	 * @param observations the observations to set
	 */
	public void setObservations(String observations) {
		this.observations = observations;
	}

	/**
	 * @return the lastModifiedBy
	 */
	public User getLastModifiedBy() {
		return lastModifiedBy;
	}

	/**
	 * @param lastModifiedBy the lastModifiedBy to set
	 */
	public void setLastModifiedBy(User lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
	}

	/**
	 * @return the createdBy
	 */
	public User getCreatedBy() {
		return createdBy;
	}

	/**
	 * @param createdBy the createdBy to set
	 */
	public void setCreatedBy(User createdBy) {
		this.createdBy = createdBy;
	}

	/**
	 * @return the time
	 */
	public LocalTime getTime() {
		return time;
	}

	/**
	 * @param time the time to set
	 */
	public void setTime(LocalTime time) {
		this.time = time;
	}
	
	@Override
	public String toString() {
		String productString = "";
		int cont = 0;
		for (int i = 0; i < products.size(); i++) {
			cont = 0;
			String prName = products.get(i).getName();
			for (int j = i; j < products.size(); j++) {
				if (products.get(j).getName().equals(prName) && !productString.contains(prName)) {
					cont++;
				}
			}
			if (!productString.contains(prName)) {
				productString += prName + "(" + cont + "), ";				
			}
		}
		
		productString = productString.substring(0, productString.length() - 2);
		
		String details = "Code: " + code +
		"\nState: " + state + 
		"\nProducts: " + productString + 
		"\nClient: " + client.getName() + " " + client.getLastName() + 
		"\nEmployee: " + employee.getName() + " " + employee.getLastName() +
		"\nDate: " + date + 
		"\nTime: " + time + 
		"\nObservations: " + observations + 
		"\nCreated by: " + createdBy.getUsername() + 
		"\nLast modified by: " + lastModifiedBy.getUsername();
		return details;
	}
	
	
}
